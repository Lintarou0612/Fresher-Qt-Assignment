/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp profilemanager.xml -i profilemanager.h -a profilemanager_adaptor
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef PROFILEMANAGER_ADAPTOR_H
#define PROFILEMANAGER_ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "profilemanager.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.fpt.fresher.ProfileManager
 */
class ProfileManagerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.fpt.fresher.ProfileManager")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.fpt.fresher.ProfileManager\">\n"
"    <property access=\"read\" type=\"i\" name=\"activeUserId\"/>\n"
"    <signal name=\"userActived\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"id\"/>\n"
"    </signal>\n"
"    <method name=\"setActiveUser\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"id\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    ProfileManagerAdaptor(QObject *parent);
    virtual ~ProfileManagerAdaptor();

public: // PROPERTIES
    Q_PROPERTY(int activeUserId READ activeUserId)
    int activeUserId() const;

public Q_SLOTS: // METHODS
    void setActiveUser(int id);
Q_SIGNALS: // SIGNALS
    void userActived(int id);
};

#endif
